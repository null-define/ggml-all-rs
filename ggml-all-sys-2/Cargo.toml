[package]
name = "ggml-all-sys-2"
description = "Low Level Bindings to llama.cpp"
version = "0.1.103"
edition = "2021"
license = "MIT OR Apache-2.0"
repository = "https://github.com/utilityai/llama-cpp-rs"
links = "llama"

include = [
    "wrapper.h",
    "build.rs",
    "/src",

    "cc/model/llama.cpp/common/**",
    "cc/ggml/include/*.h",
    "cc/ggml/src/**",
    "cc/model/llama.cpp/ggml/src/*.c",
    "cc/model/llama.cpp/ggml/src/*.cpp",
    "cc/model/llama.cpp/src/*.h",
    "cc/model/llama.cpp/src/*.cpp",

    "cc/model/llama.cpp/convert_hf_to_gguf.py", # Yes, it's required

    # Erroneously the llama.cpp code currently generates the build-info.cpp
    # into the source directory of the build instead of into the target directory
    # as it should. Will try submitting something upstream to clean this up as
    # well but for now explictly exclude this from the build. Previously this was
    # implicitly excluded because the llama.cpp code was copied wholesale into the
    # target directory for building which is why this problem wasn't visible before
    # (i.e. we'd package the llama.cpp source from the submodule & thus this build-info.cpp
    # generated file would still be ignored because it would only exist in the separate
    # copy within the target directory. An alternative, if we do want to capture build-info.cpp
    # within the package would be to change the CI task to add `--allow-dirty` to the package
    # command.
    "!cc/model/llama.cpp/common/build-info.cpp",
    "cc/model/llama.cpp/common/build-info.cpp.in",
    "cc/model/llama.cpp/include/*",
    "cc/model/llama.cpp/pocs",
    "cc/model/llama.cpp/*",
    "cc/model/llama.cpp/common/CMakeLists.txt",
    "cc/ggml/CMakeLists.txt",
    "cc/src/CMakeLists.txt",
    "cc/model/llama.cpp/src/CMakeLists.txt",
    "cc/model/llama.cpp/cmake",
    "cc/ggml/cmake",
    "cc/model/whisper.cpp/bindings/javascript/package-tmpl.json",
    "cc/model/whisper.cpp/bindings/CMakeLists.txt",
    "cc/model/whisper.cpp/CMakeLists.txt",
    "cc/model/whisper.cpp/cmake",
    "cc/model/whisper.cpp/src/**",
    "cc/model/whisper.cpp/include/whisper.h",
    "cc/model/whisper.cpp/LICENSE",
    "wrapper.h"
]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]

[build-dependencies]
cc = "1.2.19"
cmake = "0.1"
find_cuda_helper = "0.2.0"
glob = "0.3.2"
walkdir = "2"
bindgen = "0.71"
cfg-if = "1"
fs_extra = "1.3"


[features]
cuda = []
# Disables the need to dynamically link against libcuda.so / cuda.dll
cuda-no-vmm = ["cuda"]
hipblas = []
metal = []
dynamic-link = []
vulkan = []
native = []
openmp = []
# Only has an impact on Android.
shared-stdcxx = []